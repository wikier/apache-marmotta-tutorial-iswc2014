<?xml version="1.0" encoding="UTF-8"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<web-app version="2.5"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">



    <resource-env-ref>
       <resource-env-ref-name>BeanManager</resource-env-ref-name>
       <resource-env-ref-type>
          javax.enterprise.inject.spi.BeanManager
       </resource-env-ref-type>
    </resource-env-ref>

    <filter>
        <filter-name>KiWiInitFilter</filter-name>
        <filter-class>org.apache.marmotta.platform.core.servlet.KiWiResourceFilter</filter-class>
        <init-param>
            <param-name>kiwi.home</param-name>
            <param-value>/tmp/kiwi-test</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>KiWiInitFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


	<!-- enable CDI / Weld for dependency injection -->
	<listener>
	   <listener-class>org.jboss.weld.environment.servlet.Listener</listener-class>
	</listener>
		 

	
	<!--  
	  RESTeasy Webservices 
      
      Every service in the package kiwi.core.webservices is offered automatically as REST webservice; add additional packages as required
	-->
	<listener>
      <listener-class>org.jboss.resteasy.plugins.server.servlet.ResteasyBootstrap</listener-class>
    </listener>
	
	<!-- Startup the H2 database -->
	<context-param>
		<param-name>db.url</param-name>
		<param-value>jdbc:h2:/tmp/kiwi-test/db/kiwi2;MVCC=true;DB_CLOSE_ON_EXIT=FALSE</param-value>
	</context-param>
	<context-param>
		<param-name>db.user</param-name>
		<param-value>sa</param-value>
	</context-param>
	<context-param>
		<param-name>db.password</param-name>
		<param-value>sa</param-value>
	</context-param>
	<context-param>
		<param-name>db.tcpServer</param-name>
		<param-value>-tcpAllowOthers</param-value>
	</context-param>
	<listener>
	    <listener-class>org.h2.server.web.DbStarter</listener-class>
	</listener>
	<servlet>
		<servlet-name>H2Console</servlet-name>
		<servlet-class>org.h2.server.web.WebServlet</servlet-class>
		<!-- <init-param> <param-name>webAllowOthers</param-name> <param-value></param-value> </init-param> 
			<init-param> <param-name>trace</param-name> <param-value></param-value> </init-param> -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>H2Console</servlet-name>
		<url-pattern>/h2/*</url-pattern>
	</servlet-mapping>
	

     <!-- *************************************************************************************************** -->
     <!-- Apache SOLR                                                                                         -->
     <!-- *************************************************************************************************** -->



     <!-- Any path (name) registered in solrconfig.xml will be sent to that filter -->
     <filter>
       <filter-name>SolrRequestFilter</filter-name>
       <filter-class>org.apache.solr.servlet.SolrDispatchFilter</filter-class>
       <init-param>
         <param-name>path-prefix</param-name>
         <param-value>/solr</param-value>
       </init-param>
     </filter>

     <filter-mapping>
       <!--
         NOTE: When using multicore, /admin JSP URLs with a core specified
         such as /solr/coreName/admin/stats.jsp get forwarded by a
         RequestDispatcher to /solr/admin/stats.jsp with the specified core
         put into request scope keyed as "org.apache.solr.SolrCore".

         It is unnecessary, and potentially problematic, to have the SolrDispatchFilter
         configured to also filter on forwards.  Do not configure
         this dispatcher as <dispatcher>FORWARD</dispatcher>.
       -->
       <filter-name>SolrRequestFilter</filter-name>
       <url-pattern>/solr/*</url-pattern>
     </filter-mapping>


     <mime-mapping>
       <extension>.xsl</extension>
       <!-- per http://www.w3.org/TR/2006/PR-xslt20-20061121/ -->
       <mime-type>application/xslt+xml</mime-type>
     </mime-mapping>




	
	<!-- EHCache Web Cache -->
    <filter>
            <filter-name>SimpleCachingHeadersPageCachingFilter</filter-name>
            <filter-class>net.sf.ehcache.constructs.web.filter.SimpleCachingHeadersPageCachingFilter</filter-class>
            <init-param>
                    <param-name>suppressStackTraces</param-name>
                    <param-value>false</param-value>
            </init-param>
            <init-param>
                    <param-name>cacheName</param-name>
                    <param-value>PageCache</param-value>
            </init-param>

    </filter>



    <filter>
        <filter-name>KiWi Webservices</filter-name>
        <filter-class>
            org.jboss.resteasy.plugins.server.servlet.FilterDispatcher
        </filter-class>
        <init-param>
            <param-name>javax.ws.rs.Application</param-name>
            <param-value>org.apache.marmotta.platform.core.webservices.CoreApplication</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>KiWi Webservices</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <context-param>
		<param-name>resteasy.injector.factory</param-name>
		<param-value>org.jboss.resteasy.cdi.CdiInjectorFactory</param-value>
	</context-param>


    <servlet>
       <servlet-name>ServletTestRunner</servlet-name>
       <servlet-class>org.jboss.arquillian.protocol.servlet_3.ServletTestRunner</servlet-class>
    </servlet>


    <servlet-mapping>
       <servlet-name>ServletTestRunner</servlet-name>
       <url-pattern>/ArquillianServletRunner</url-pattern>
    </servlet-mapping>

</web-app>
